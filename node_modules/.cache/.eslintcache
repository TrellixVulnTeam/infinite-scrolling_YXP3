[{"/media/harshiiet/File_Space 1/Work_Study/WD/React/venueMonk/infinite-scrolling/src/index.js":"1","/media/harshiiet/File_Space 1/Work_Study/WD/React/venueMonk/infinite-scrolling/src/App.js":"2","/media/harshiiet/File_Space 1/Work_Study/WD/React/venueMonk/infinite-scrolling/src/PhotoCard.js":"3","/home/harshiiet/Documents/GitHub/infinite-scrolling/src/index.js":"4","/home/harshiiet/Documents/GitHub/infinite-scrolling/src/App.js":"5","/home/harshiiet/Documents/GitHub/infinite-scrolling/src/PhotoCard.js":"6"},{"size":232,"mtime":1652984056434,"results":"7","hashOfConfig":"8"},{"size":3691,"mtime":1653056903730,"results":"9","hashOfConfig":"8"},{"size":628,"mtime":1653041367116,"results":"10","hashOfConfig":"8"},{"size":232,"mtime":1652984056434,"results":"11","hashOfConfig":"12"},{"size":3691,"mtime":1653057228949,"results":"13","hashOfConfig":"12"},{"size":628,"mtime":1653041367116,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"5d5eu7",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"198lzqu",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/harshiiet/File_Space 1/Work_Study/WD/React/venueMonk/infinite-scrolling/src/index.js",[],[],[],"/media/harshiiet/File_Space 1/Work_Study/WD/React/venueMonk/infinite-scrolling/src/App.js",["35"],[],"/media/harshiiet/File_Space 1/Work_Study/WD/React/venueMonk/infinite-scrolling/src/PhotoCard.js",[],[],"/home/harshiiet/Documents/GitHub/infinite-scrolling/src/index.js",[],[],"/home/harshiiet/Documents/GitHub/infinite-scrolling/src/App.js",["36"],[],"import React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport loadingGif from \"./loading.gif\";\nimport \"./style/App.scss\";\nimport PhotoCard from \"./PhotoCard\";\n\nfunction App() {\n  const [photos, setPhotos] = useState([]);\n  const [term, setTerm] = useState(\"\");\n  const [pageNumber, setPageNumber] = useState(1);\n  const [termErr, setTermErr] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // useEffect(() => {\n  //   fetchPhotos(term, pageNumber);\n  // }, [term, pageNumber]);\n\n  // attach to the element at the end of the page (loading_gif, button)\n  const pageEnd = useRef();\n  //count page loading content\n\n  useEffect(() => {\n    fetchPhotos(term, pageNumber);\n  }, [pageNumber]);\n\n  const fetchPhotos = async (term, pageNumber) => {\n    const response = await axios.get(\n      \"https://api.unsplash.com/search/photos/\",\n      {\n        params: {\n          query: term,\n          page: pageNumber,\n          per_page: 10,\n        },\n        headers: {\n          Authorization:\n            \"Client-ID IPHEqLeIhaOwxNOHf7nTwsQ3fZFkfT8c01zeZO-ypYk\",\n        },\n      }\n    );\n    // console.log(response.data.results);\n    setPhotos((oldPhotos) => [...oldPhotos, ...response.data.results]);\n    // console.log(response.data);\n    // setPhotos(response.data);\n    setLoading(!loading);\n    // console.log(response.data);\n  };\n\n  const loadMore = () => {\n    setPageNumber((prevPageNumber) => prevPageNumber + 1);\n    // console.log(pageNumber);\n  };\n\n  let num = 1;\n\n  useEffect(() => {\n    if (loading) {\n      const observer = new IntersectionObserver(\n        (entries) => {\n          if (entries[0].isIntersecting) {\n            // console.log(\"this is the end\");\n            num++;\n            // having trouble with loadMore()*\n            // setPageNumber((prevPageNumber) => prevPageNumber + 1);\n            // fetchPhotos(term, pageNumber);\n            loadMore();\n            if (num >= 5) {\n              observer.unobserve(pageEnd.current);\n            }\n          }\n        },\n        { threshold: 1 }\n      );\n      observer.observe(pageEnd.current);\n    }\n  }, [loading, num, pageNumber]);\n\n  const handleChange = (e) => {\n    setTerm(e.target.value);\n  };\n\n  // Validation\n  const validate = () => {\n    let isValid = true;\n    if (term === \"\") {\n      setTermErr(\"**This field is required\");\n      isValid = false;\n    }\n    return isValid;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setPhotos([]);\n    const isValid = validate();\n    if (isValid) {\n      fetchPhotos(term, pageNumber);\n      // console.log(photos);\n      setTermErr(\"\");\n    }\n    return;\n  };\n\n  return (\n    <>\n      <div className=\"header\">\n        <h1 className=\"title\">Search for images you want to browse.</h1>\n        <h3>Happy Scrolling!</h3>\n        <input\n          type=\"text\"\n          value={term}\n          onChange={handleChange}\n          placeholder=\"Search here...\"\n        />\n        <div className=\"empty-field-err\">{termErr}</div>\n        <button type=\"submit\" onClick={handleSubmit}>\n          Submit\n        </button>\n      </div>\n      <div className=\"result-section\">\n        <div className=\"photo-container\">\n          {photos.map((photo, index) => {\n            return <PhotoCard key={index} image={photo} />;\n          })}\n        </div>\n        <div className={photos.length === 0 ? \"hide\" : \"load-button\"}>\n          <div className=\"loading\">\n            <img src={loadingGif} alt=\"loading animation\" ref={pageEnd} />\n          </div>\n          <button className=\"load-more\" onClick={loadMore}>\n            Load More\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","/home/harshiiet/Documents/GitHub/infinite-scrolling/src/PhotoCard.js",[],[],{"ruleId":"37","severity":1,"message":"38","line":24,"column":6,"nodeType":"39","endLine":24,"endColumn":18,"suggestions":"40"},{"ruleId":"37","severity":1,"message":"38","line":24,"column":6,"nodeType":"39","endLine":24,"endColumn":18,"suggestions":"41"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchPhotos' and 'term'. Either include them or remove the dependency array.","ArrayExpression",["42"],["43"],{"desc":"44","fix":"45"},{"desc":"44","fix":"46"},"Update the dependencies array to be: [fetchPhotos, pageNumber, term]",{"range":"47","text":"48"},{"range":"49","text":"48"},[723,735],"[fetchPhotos, pageNumber, term]",[723,735]]